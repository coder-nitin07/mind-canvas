// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  // 
  boardCreated      Board[]         @relation("UserBoardsCreated")
  workspacesOwned   Workspace[]     @relation("UserWorkspacesOwned")
  notesAuthored     Note[]          @relation("UserNotesAuthored")
  refreshTokens     RefreshToken[]
}

model Workspace{
  id            String          @id @default(cuid())
  name          String
  description   String?
  ownerId       Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  // relations
  owner         User            @relation("UserWorkspacesOwned", fields: [ ownerId ], references: [ id ])
  boards        Board[]
}

model Board{
  id            String          @id @default(cuid())
  title         String          
  description   String?
  workspaceId   String          
  createdById   Int         
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  // relations
  workspace     Workspace       @relation(fields: [ workspaceId ], references: [ id ])
  createdBy     User            @relation("UserBoardsCreated", fields: [ createdById ], references: [ id ])
  notes         Note[]          @relation("BoardNotes")
}

model Note{
  id            String          @id @default(cuid())
  title         String
  content       String
  boardId       String
  authorId      Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  // relations
  board  Board @relation("BoardNotes", fields: [boardId], references: [id])
  author        User            @relation("UserNotesAuthored", fields: [authorId], references: [id])
}

model RefreshToken {
  id          Int       @id @default(autoincrement())
  token       String    @unique
  userId      Int
  user        User      @relation(fields: [ userId ], references: [id])
  createdAt   DateTime  @default(now())
  expiresAt   DateTime
}